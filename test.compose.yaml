version: '3.7'

services:
  router:
    restart: always
    image: 'nginx'
    ports:
      - 80:80
    volumes:
      - ./nginx_api_proxy.nginx:/etc/nginx/conf.d/default.conf
    depends_on:
      - census
      - bookworm
      - frontend
      - mcc
    networks:
      - backend
    
  frontend:
    image: 'nginx'
    volumes:
      - './frontend/frontend:/var/www/html'
      - './frontend/nginx.conf:/etc/nginx/conf.d/default.conf'
    networks:
      - backend

  mcc:
    restart: always
    build:
      context: ./mcc
    command: '--root-path /api/mcc'
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - ./test.env
    healthcheck:
      test: ["CMD-SHELL", "curl http://localhost/docs"]
      interval: 1m
      timeout: 5s
      retries: 5
    networks:
      - backend
  
  census:
    build:
      context: ./census
    command: '--root-path /api/census'
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - ./test.env
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "curl http://localhost/docs"]
      interval: 1m
      timeout: 5s
      retries: 5

  bookworm:
    build:
      context: ./bookworm
    command: '--root-path /api/bookworm'
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - ./test.env
    ports: 
      - 8001:80
    networks:
      - backend
  
  db:
    image: postgres
    user: postgres
    networks:
      - backend
    env_file:
      - ./test.env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U test"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - 5432:5432

networks:
  backend:
    external: true
    